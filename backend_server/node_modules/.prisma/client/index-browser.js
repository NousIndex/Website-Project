
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.3.1
 * Query Engine version: 61e140623197a131c2a6189271ffee05a7aa9a59
 */
Prisma.prismaVersion = {
  client: "5.3.1",
  engine: "61e140623197a131c2a6189271ffee05a7aa9a59"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.API_UsageScalarFieldEnum = {
  API_Index: 'API_Index',
  API_Name: 'API_Name',
  API_Last_Used: 'API_Last_Used'
};

exports.Prisma.BannersScalarFieldEnum = {
  Banner_Index: 'Banner_Index',
  Game_ID: 'Game_ID',
  Banner_Path: 'Banner_Path',
  Banner_Start: 'Banner_Start',
  Banner_End: 'Banner_End',
  Banner_RateUps: 'Banner_RateUps'
};

exports.Prisma.Character_BirthdaysScalarFieldEnum = {
  Character_Index: 'Character_Index',
  Game_ID: 'Game_ID',
  Character_Name: 'Character_Name',
  Character_Birthday: 'Character_Birthday'
};

exports.Prisma.CodesScalarFieldEnum = {
  Code_Index: 'Code_Index',
  Game_ID: 'Game_ID',
  Code_Code: 'Code_Code',
  Code_Rewards: 'Code_Rewards',
  Code_End: 'Code_End'
};

exports.Prisma.EventsScalarFieldEnum = {
  Event_Index: 'Event_Index',
  Game_ID: 'Game_ID',
  Event_Name: 'Event_Name',
  Event_Start: 'Event_Start',
  Event_End: 'Event_End',
  Event_Image: 'Event_Image'
};

exports.Prisma.Game_GeneralScalarFieldEnum = {
  Game_ID: 'Game_ID',
  Game_Name: 'Game_Name'
};

exports.Prisma.Games_UsersScalarFieldEnum = {
  UID: 'UID',
  Genshin_UID: 'Genshin_UID',
  StarRail_UID: 'StarRail_UID',
  Genshin_Watch: 'Genshin_Watch',
  StarRail_Watch: 'StarRail_Watch'
};

exports.Prisma.UsersScalarFieldEnum = {
  UID: 'UID',
  Username: 'Username',
  Password_Hash: 'Password_Hash',
  Email: 'Email',
  Registration_Date: 'Registration_Date',
  Last_Login: 'Last_Login'
};

exports.Prisma.Genshin_DrawScalarFieldEnum = {
  Wish_Index: 'Wish_Index',
  Genshin_UID: 'Genshin_UID',
  DrawID: 'DrawID',
  DrawTime: 'DrawTime',
  DrawType: 'DrawType',
  Item_Name: 'Item_Name',
  Rarity: 'Rarity'
};

exports.Prisma.StarRail_DrawScalarFieldEnum = {
  Wish_Index: 'Wish_Index',
  StarRail_UID: 'StarRail_UID',
  DrawID: 'DrawID',
  DrawTime: 'DrawTime',
  DrawType: 'DrawType',
  Item_Name: 'Item_Name',
  Rarity: 'Rarity'
};

exports.Prisma.SummaryTableScalarFieldEnum = {
  Summary_Table_Index: 'Summary_Table_Index',
  Game_UID: 'Game_UID',
  total_items: 'total_items'
};

exports.Prisma.Reverse1999_ResonanceScalarFieldEnum = {
  Character_Resonance: 'Character_Resonance',
  Resonance: 'Resonance'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  API_Usage: 'API_Usage',
  Banners: 'Banners',
  Character_Birthdays: 'Character_Birthdays',
  Codes: 'Codes',
  Events: 'Events',
  Game_General: 'Game_General',
  Games_Users: 'Games_Users',
  Users: 'Users',
  Genshin_Draw: 'Genshin_Draw',
  StarRail_Draw: 'StarRail_Draw',
  SummaryTable: 'SummaryTable',
  Reverse1999_Resonance: 'Reverse1999_Resonance'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
